import{_ as s,c as a,o as i,a7 as t}from"./chunks/framework.Cmkkejod.js";const e="/assets/docs/obsidian01.png",F=JSON.parse('{"title":"笔记工具 Obsidian","description":"","frontmatter":{"title":"笔记工具 Obsidian","updateTime":"2025/04/23","tags":"笔记|Markdown"},"headers":[],"relativePath":"EXPERIENCE/obsidian.md","filePath":"EXPERIENCE/obsidian.md","lastUpdated":1745423788000}'),n={name:"EXPERIENCE/obsidian.md"},p=t('<h2 id="intro" tabindex="-1">Intro <a class="header-anchor" href="#intro" aria-label="Permalink to &quot;Intro&quot;">​</a></h2><p>好记性不如烂笔头。对于长年工作在电脑前的人们来说，笔记工具必不可少。</p><p>前年起，出于对付费笔记工具性价比的不满，开始使用自己的<a href="/EXPERIENCE/wiz.html">私有化部署</a>笔记服务。</p><p>两年后，原本主力使用的笔记工具，发展已渐渐落后，很多我想要的功能都没有出现。</p><p>在寻找各种替代品时，首先是考虑数据迁移问题。让我恼火的是，为知笔记的数据格式并不通用，而且导出功能也只能逐篇操作。</p><p>这进一步坚定了我换工具的决心。必须及时止损，否则随着笔记数量的增加，更是一条不归路。</p><h2 id="工具选择" tabindex="-1">工具选择 <a class="header-anchor" href="#工具选择" aria-label="Permalink to &quot;工具选择&quot;">​</a></h2><p>最后在思源笔记，以及名为黑曜石（Obsidian）的工具两者间犹豫。</p><p>用大模型问一下，这两个工具的功能特点，就可以随便列一堆，非常清晰。</p><blockquote><table tabindex="0"><thead><tr><th><strong>维度</strong></th><th><strong>思源笔记</strong></th><th><strong>Obsidian</strong></th></tr></thead><tbody><tr><td><strong>核心单元</strong></td><td>块级编辑，精细化管理</td><td>文档级编辑，依赖插件扩展</td></tr><tr><td><strong>数据格式</strong></td><td>专有 <code>.sy</code> 格式</td><td>标准 <code>.md</code> 文件</td></tr><tr><td><strong>扩展性</strong></td><td>插件较少，但基础功能完善</td><td>插件生态丰富，自定义空间大</td></tr><tr><td><strong>适用人群</strong></td><td>普通用户、企业商用</td><td>技术爱好者、开发者</td></tr><tr><td><strong>性价比</strong></td><td>年费较低，功能集成度高</td><td>免费基础版，高级功能需付费或插件</td></tr></tbody></table><p>以上表格来自 DeepSeek，由 AI 生成，请仔细甄别</p></blockquote><p>我自己更看重的是方便迁移和编辑，最后选用 Obsidian。</p><p>没有广告费，但白嫖了别人辛苦开发的工具，推荐一波。</p><h2 id="环境部署" tabindex="-1">环境部署 <a class="header-anchor" href="#环境部署" aria-label="Permalink to &quot;环境部署&quot;">​</a></h2><p>不需要像思源笔记和为知笔记那样，需要自己部署一个服务端。因为 Obsidian 可以<strong>不使用</strong>官方的数据服务，支持自主选择自建存储服务或第三方服务，自由度非常高。</p><p>客户端支持 Windows、Linux、Mac、iOS、安卓多个平台，应有尽有。支持多种浏览器的收藏夹同步功能。</p><h2 id="数据同步方案" tabindex="-1">数据同步方案 <a class="header-anchor" href="#数据同步方案" aria-label="Permalink to &quot;数据同步方案&quot;">​</a></h2><p>简单地找一个第三方插件 Remotely Save，就可以把笔记数据同步到自己想要的数据服务上。如下图，支持种类非常齐全了：</p><p><img src="'+e+`" alt="Remotely Save"></p><h4 id="程序员方案" tabindex="-1">程序员方案 <a class="header-anchor" href="#程序员方案" aria-label="Permalink to &quot;程序员方案&quot;">​</a></h4><p>如果你非常喜欢使用 Git，可以直接使用就手的工具，将数据同步到<strong>全球大型同性交友平台</strong>，或者自己的代码仓库服务上。当然，在 Obsidian 上同样有第三方插件工具支持。</p><h4 id="推荐方案" tabindex="-1">推荐方案 <a class="header-anchor" href="#推荐方案" aria-label="Permalink to &quot;推荐方案&quot;">​</a></h4><p>找一个最便宜的对象存储 OSS 服务。比如阿里云的 OSS，可以先白嫖 20GB 三个月；使用满意了再购买 40GB 的标准资源包，9 元/年，一下子开通五年也就一两顿快餐的钱。</p><h4 id="我自己的方案" tabindex="-1">我自己的方案 <a class="header-anchor" href="#我自己的方案" aria-label="Permalink to &quot;我自己的方案&quot;">​</a></h4><p>刚好有一个丐版服务器，以前部署过一个 <a href="/EXPERIENCE/AList.html">AList 私有网盘</a>；在服务器上新开一个专门的 WebDAV 服务，就可以把笔记数据同步到私有网盘服务上。</p><p>AList 私有网盘，还支持将接入外部网盘，各种各样的网盘，再转为 WebDAV 服务。总之，我连 9 元/年也省了。🙃</p><h2 id="进一步改进的数据方案" tabindex="-1">进一步改进的数据方案 <a class="header-anchor" href="#进一步改进的数据方案" aria-label="Permalink to &quot;进一步改进的数据方案&quot;">​</a></h2><p>以上方案，都极度依赖一个社区插件 Remotely Save。</p><p>它给带来非常大的便利，仅仅是简单的几步设置，即可实现 N 种白嫖方案。而且这个热门的插件有着100多万的下载量，质量有保证。</p><p>但毕竟是第三方的。</p><p>果然，不稳定的情况终于出现了。有次一整天无法同步，让我发现它居然还要先访问某个云端接口，才能继续同步，而好死不死，那个接口 500 报错，后面的操作就阻塞了。</p><p>我懒得深究原因，也不想等待了。被人绑定的感觉很不好。</p><p>根据 Obsidian 的数据存储方式，实际上我只要设法在同端同步好仓库文件夹即可。</p><p>几经对比，我选用了一个命令行同步工具：<a href="https://rclone.org" target="_blank" rel="noreferrer">rclone</a></p><p>根据平台下载好，建立配置文件：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rclone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # rclone 目录，记得将路径添加到系统环境变量中，便于调用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rclone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> paths</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查询路径</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows 下配置文件默认路径 ~~\\&lt;用户名&gt;\\AppData\\Roaming\\rclone\\rclone.conf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>根据命令行提示，很容易就能完成配置。然后查看一下 WebDAV 的文件，看是否成功：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rclone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote:/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 列出存储内容  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rclone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lsd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote:/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 仅显示目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rclone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tree</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote:/</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 显示树形结构</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>支持增量同步，是我抛弃五花八门的图形工具，而选用这个看起来有点点麻烦的命令行工具的重要原因。</p><p>同步过程，非常快速。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rclone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sync</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /local/path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote:path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --progress</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 本地 → WebDAV</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rclone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sync</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote:path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /local/path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dry-run</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # WebDAV → 本地，模拟执行</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>当我以为已经接近完美时，又发现了可以直接<strong>将 WebDAV 挂载为本地文件夹</strong>这个功能！</p><p>这样一来，根本就不需要每次手动同步，或者配置定时任务了。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 挂载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rclone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mount</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote:/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /d/Obsidian/cache/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --vfs-cache-mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> full</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --links</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>然后，我将 Obsidian 的数据仓库目录，直接设置为这个挂载的目录 <code>/d/Obsidian/cache/</code>。</p><p>使用起来就和本地文件夹一样。实际上 Obsidian 的数据存储在 WebDAV 上，修改完就实时同步好了。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果是在 Windows 环境，挂载前需要先下载 <a href="https://github.com/winfsp/winfsp/releases" target="_blank" rel="noreferrer">winfsp</a> 安装好</p></div><h2 id="在线预览和分享" tabindex="-1">在线预览和分享 <a class="header-anchor" href="#在线预览和分享" aria-label="Permalink to &quot;在线预览和分享&quot;">​</a></h2><p>Obsidian 提供官方的在线发布的付费服务。</p><p>我基于 AList 实现数据存储，可以直接利用 AList 的在线页面查看笔记，又省一笔。🙃</p><p>在线查看，要考虑到查看权限问题。整个网盘目录，自然是只有自己可以查看。可以在 AList 上，将文档存储的其中一个目录，设置为游客可浏览的目录，把需要发布的文件拖进这个目录，就可以让所有人都可以查看了。</p><p>效果如下： <a href="https://note.ceil.top:80/Publish/%E6%AC%A2%E8%BF%8E.md" target="_blank" rel="noreferrer">AList 在线文档</a></p><p>当然，你也可以结合一些同样是基于 markdown 的静态网站工具，比如本站使用的 Vitepress，复用发布目录的文件，实现在线发布工作。</p><p>可以参考<a href="https://ceil.top/CODES/vitepress-play-around.html" target="_blank" rel="noreferrer">这篇文章</a>。</p><h2 id="备份和还原" tabindex="-1">备份和还原 <a class="header-anchor" href="#备份和还原" aria-label="Permalink to &quot;备份和还原&quot;">​</a></h2><p>Obsidian 在 PC 上的数据仓库，实际上就是 markdown 文件库。数据备份就是备份自己电脑上的文件，太简便，不必细说了。</p>`,55),l=[p];function r(h,d,o,k,c,b){return i(),a("div",null,l)}const u=s(n,[["render",r]]);export{F as __pageData,u as default};
