import{_ as s,c as a,o as e,al as i}from"./chunks/framework.BG6RkuBV.js";const b=JSON.parse('{"title":"免费 SSL 证书部署备忘","description":"","frontmatter":{"title":"免费 SSL 证书部署备忘","updateTime":"2024/06/08","tags":"SSL|Digicert"},"headers":[],"relativePath":"EXPERIENCE/ssl-cert.md","filePath":"EXPERIENCE/ssl-cert.md","lastUpdated":1742552080000}'),t={name:"EXPERIENCE/ssl-cert.md"},p=i(`<h2 id="intro" tabindex="-1">Intro <a class="header-anchor" href="#intro" aria-label="Permalink to &quot;Intro&quot;">​</a></h2><p>2023年底，一众服务器提供商纷纷发出这样的通知：</p><blockquote><p>接 Digicert 厂商通知，<strong>2023年11月15日</strong>起，Digicert DV(Basic) 单域名证书有效期将从 12 个月缩短至 3 个月。</p></blockquote><p>类似本站这样的非商业技术博客、个人网站，基本上都是使用免费证书。也曾打开过收费证书的价格列表页面，吓得马上就关闭了。我不配使用这么昂贵的证书。🙃</p><p>现在免费证书有效期缩短，就很难受，白嫖难度又增加了。因为这意味着，每 3 个月就申请、更换一次服务器证书。</p><p>唯一的好处是，作为非专业运维人员，更换证书的操作也变得熟练起来了。这里把我的笔记也整理一下备忘。</p><h2 id="证书申请" tabindex="-1">证书申请 <a class="header-anchor" href="#证书申请" aria-label="Permalink to &quot;证书申请&quot;">​</a></h2><p>各大云服务器平台，一般都有这样的资源。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>以阿里云为例：登录控制台，找到 数字证书管理服务/SSL 证书，创建证书<br> 以华为云为例：登录控制台，找到 云证书管理服务/SSL证书管理，创建测试证书</p></div><p>如华为云：</p><blockquote><p>每个华为云账号可以免费申请20张测试证书</p></blockquote><p>按提示填写一些信息，包括联系人信息、域名等。</p><p>然后系统会生成一段验证码，复制好，登录域名提供商的后台（DNS验证），添加一个 <code>_dnsauth</code> TXT记录，刷新解析，稍等一会就可以回证书申请页面，手动点一下验证。</p><p>解析记录通过后，提交申请就可以了。一般都很快就会签发证书。</p><h2 id="证书部署" tabindex="-1">证书部署 <a class="header-anchor" href="#证书部署" aria-label="Permalink to &quot;证书部署&quot;">​</a></h2><p>证书签发成功后，下一步需要部署到服务器应用上。</p><p>如果是相同云服务提供端，可以使用平台提供的付费“自动部署”服务。可是我证书都白嫖了，会花这冤枉钱么？🙃</p><p>下面的部署过程，以我的一个 <code>eggjs</code> 服务为例。</p><p>首先需要修改 <code>eggjs</code> 服务的启动脚本，指定 https 使用的证书文件：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ~/package.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;egg-scripts start --daemon --title=xxx --port=443 --https.key=&#39;cert.key&#39; --https.cert=&#39;cert.pem&#39;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>把证书下载下来，解压准备好，会发现有针对多种不同服务类型的证书……咦，等等，为什么没有 <code>nodejs</code> 的？！🙃</p><p>逐个打开看了一下，发现 Nginx 的证书最接近，比较了一下里面（根本看不懂）的密钥内容，发现也是差不多。</p><p>赶紧恶补一下证书的知识：</p><blockquote><p>Base64 (ASCII) 编码的文本格式。这种证书文件是可以通过文本编辑器打开，甚至进行编辑，常见有 PEM 证书格式，扩展名包括 PEM、CRT 和 KEY。</p></blockquote><p>只是扩展名不同，内容是一样的，那就没问题了。把证书文件名，改成和上面启动脚本中指定的一致。</p><p>然后，将证书文件上传到服务的根目录：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./cert.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@ceil.top:/root/eggjs/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>重启服务，发现浏览器已能正确识别为有效证书。</p><p>大功告成！</p>`,29),n=[p];function l(r,o,c,h,d,k){return e(),a("div",null,n)}const E=s(t,[["render",l]]);export{b as __pageData,E as default};
