import{_ as a,c as e,o as t,a5 as r}from"./chunks/framework.C3c2KeN3.js";const k=JSON.parse('{"title":"Webpack简明学习[TODO]","description":"","frontmatter":{"title":"Webpack简明学习[TODO]","updateTime":"2019/03/03"},"headers":[],"relativePath":"CODES/basisOfWebpack.md","filePath":"CODES/basisOfWebpack.md","lastUpdated":1717895299000}'),s={name:"CODES/basisOfWebpack.md"},o=r('<h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>搞前端的人，估计没有未听说过 <a href="https://webpack.github.io/" target="_blank" rel="noreferrer">webpack</a> 的吧？说webpack开创了一个新的前端发展时代，毫不为过。<br> 但 webpack 并不是那么易于学习。文档长，配置项多，部分文档用语并不是针对初学者，以致不少人望而生畏。甚至有人只是用着各种相关的插件和工具，复制着网上文章中的配置代码到自己的项目中，但实际上并不知道为什么要这样做。<br> 众所周知，webpack 是一个打包工具。然而什么是打包工具？它为什么而存在？它有什么不同的用法？为什么需要这么多的配置项？<br> 本文参考自<a href="https://www.webpackjs.com/" target="_blank" rel="noreferrer">webpack 中文文档</a>，力求用最简洁的表达把最基本的要掌握的内容用一篇文章列出来。</p><h2 id="介绍-1" tabindex="-1">介绍 <a class="header-anchor" href="#介绍-1" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>什么是 webpack？不就打个包嘛，和 winrar 的“打包”有什么不同？</p><h2 id="常用的命令有什么不同" tabindex="-1">常用的命令有什么不同 <a class="header-anchor" href="#常用的命令有什么不同" aria-label="Permalink to &quot;常用的命令有什么不同&quot;">​</a></h2><p>npm install --save-dev<br> npm install --save<br> npm install -D</p><h2 id="那一个又一个的插件有什么用" tabindex="-1">那一个又一个的插件有什么用？ <a class="header-anchor" href="#那一个又一个的插件有什么用" aria-label="Permalink to &quot;那一个又一个的插件有什么用？&quot;">​</a></h2><p>file-loader 就够了，为什么又要有 image-webpack-loader 和 url-loader</p>',8),c=[o];function i(l,n,p,b,d,h){return t(),e("div",null,c)}const f=a(s,[["render",i]]);export{k as __pageData,f as default};
